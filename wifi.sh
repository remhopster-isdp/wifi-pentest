#!/bin/bash

# Define the function to start monitor mode and scanning SSIDs
start_monitor_mode() {
    # Start monitor and scanning SSIDs
    echo 'Do you want to enable the monitor mode and start scanning? yes/no '

    read var
    if [[ "$var" == "yes" ]]; then
        # commands to run
        sudo airmon-ng check kill
        sudo airmon-ng start wlan0
        echo "Enabling monitor mode..."
	sleep 1

        gnome-terminal --geometry=80x24+0+0  -- bash -c "sudo airodump-ng wlan0mon ; exec bash"
    #Wait time to open terminal on the right side
    sleep 20
    else
        echo "You don't want to start monitor mode, and the script will be terminated."
        exit 1
    fi
    # Open the second GNOME Terminal window on the right side
    
    script_to_execute="./scan.sh"
    gnome-terminal --geometry=80x24+780+0 -- bash -c "sudo chmod +x \"$script_to_execute\"; \"$script_to_execute\"; exec bash"

    #We need another airodump-ng where we will look at one specific wifi network. We need to  add parameters: channel, bssid (MAC), -w capture  
    # example airodump-ng -c 6 --bssid MAC-address of the device -w (write to file) capture1 wlan0mon


    #check wireless interface
    if [[ -z $interface ]]; then
        echo "No wireless interface found"
        exit 1
    fi

    echo "Wireless interface: $interface"
}

# Call the function
start_monitor_mode
